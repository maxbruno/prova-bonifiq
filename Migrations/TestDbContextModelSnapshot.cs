// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProvaPub.Repository;

#nullable disable

namespace ProvaPub.Migrations
{
    [DbContext(typeof(TestDbContext))]
    partial class TestDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("ProvaPub.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Chris Lueilwitz"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Dora Olson"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Frederick Mueller"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Mathew Howe"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Lynn Hills"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Gordon Hammes"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Alice Dibbert"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Ernest Bode"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Jim Lehner"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Paul Legros"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Ian Harris"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Linda Nitzsche"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Laurence Reilly"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Erik Hirthe"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Chelsea Emmerich"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Jennie Swift"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Jackie Fay"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Noel Aufderhar"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Lamar Crist"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Gerald Langosh"
                        });
                });

            modelBuilder.Entity("ProvaPub.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ProvaPub.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Small Steel Pizza"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Rustic Wooden Towels"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Rustic Fresh Shirt"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Rustic Rubber Towels"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Refined Concrete Towels"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Refined Steel Fish"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Rustic Concrete Shoes"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Gorgeous Soft Salad"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Rustic Wooden Bike"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Sleek Concrete Sausages"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Unbranded Fresh Keyboard"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Handmade Frozen Ball"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Fantastic Soft Sausages"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Ergonomic Rubber Bacon"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Rustic Granite Chicken"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Unbranded Concrete Towels"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Awesome Frozen Shoes"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Licensed Frozen Pants"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Practical Wooden Bike"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Ergonomic Concrete Chair"
                        });
                });

            modelBuilder.Entity("ProvaPub.Models.RandomNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Numbers");
                });

            modelBuilder.Entity("ProvaPub.Models.Order", b =>
                {
                    b.HasOne("ProvaPub.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ProvaPub.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
